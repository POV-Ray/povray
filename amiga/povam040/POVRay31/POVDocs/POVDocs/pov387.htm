<HTML>
<HEAD>
<TITLE>POV-Ray 3.1 Documentation - Adjusting Radiosity</TITLE>
</HEAD>
<BODY BGCOLOR="#FFCC66" TEXT="#000000" LINK="#0000FF" VLINK="#000080" ALINK="#FF0000">
<P ALIGN="CENTER">
Previous:<A HREF="pov386.htm">How Radiosity Works</A>&nbsp;&nbsp;
<A HREF="povuser.htm">Main Index</A>&nbsp;&nbsp;
Next:<A HREF="pov388.htm">Tips on Radiosity</A>
</P>
<HR>
<BR>
<H4><A NAME="_Toc414199234"><A NAME="_Toc429993751">Adjusting Radiosity</A></A></H4>
<P>As described earlier, radiosity is turned on by using the <b><code>Radiosity</code></b> INI file option or the <b><code>+QR</code></b> command line switch. However radiosity has many parameters that are specified in a <b><code>radiosity</code></b> statement inside a <b><code>global_settings</code></b> statement as follows:</P>
<b><code><DL>
<DD>global_settings { radiosity {</code></b> <I>[RADIOSITY_ITEMS...]</I> <b><code>}}</DD>
</code></b><I><DT>RADIOSITY_ITEMS:</DT>
</I><b><code><DD>brightness</code></b> <I>Float</I>   |   <b><code>count</code></b> <I>Integer</I>   |   <b><code>distance_maximum</code></b> <I>Float</I>   |</DD>
<b><code><DD>error_bound</code></b> <I>Float</I>   |   <b><code>gray_threshold</code></b> <I>Float</I>   |   <b><code>low_error_factor</code></b> <I>Float</I>   |</DD>
<b><code><DD>minimum_reuse</code></b> <I>Float</I>   |   <b><code>nearest_count</code></b> <I>Integer</I>   |   <b><code>recursion_limit</code></b> <I>Integer</DD>
</DL>
</I><P>Each item is optional and may appear in and order. If an item is specified more than once the last setting overrides previous values. Details on each item is given in the following sections.</P>
<H5><A NAME="_Toc414199235"><A NAME="_Toc429993752">brightness</A></A></H5>
<P>This <b><code>brightness</code></b> keyword specifies a float value that is the degree to which ambient values are brightened before being returned upwards to the rest of the system. If an object is red <b><code>rgb</code>&lt;1,0 0&gt;</B>, with an ambient value of 0.3, in normal situations a red component of 0.3 will be added in. With radiosity on, assume it was surrounded by an object of gray color <b><code>rgb&lt;0.6,0.6,0.6&gt;</code></b>. The average color returned by the gathering process will be the same. This will be multiplied by the texture's ambient weight value of 0.3, returning <b><code>rgb&lt;0.18,0.18,0.18&gt;</code></b>. This is much darker than the 0.3 which would be added in normally. Therefore, all returned values are brightened by the inverse of the average of the calculated values, so the average ambient added in does not change.  Some will be higher than specified (higher than 0.3 in this example) and some will be lower but the overall scene brightness will be unchanged.  The default value is 3.3.</P>
<H5><A NAME="_Toc414199236"><A NAME="_Toc429993753">count</A></A></H5>
<P>The integer number of rays that are sent out whenever a new radiosity value has to be calculated is given by <b><code>count</code></b>. Values of 100 to 150 make most scenes look good.  Higher values might be needed for scenes with high contrast between light levels or small patches of light causing the illumination.  This would be used only for a final rendering on an image because it is very compute intensive. Since most scenes calculate the ambient value at 1% to 2% of pixels, as a rough estimate, your rendering will take 1% to 2% of this number times as long. If you set it to 300 your rendering might take 3 to 6 times as long to complete (1% to 2% times 300).</P>
<P>When this value is too low, the light level will tend to look a little bit blotchy, as if the surfaces you're looking at were slightly warped. If this is not important to your scene (as in the case that you have a bump map or if you have a strong texture) then by all means use a lower number.  The default value is 100.</P>
<H5><A NAME="_Toc414199237"><A NAME="_Toc429993754">distance_maximum</A></A></H5>
<P>The <b><code>distance_maximum</code></b> float value is the only tuning value that depends upon the size of the objects in the scene. This one <CODE>must</CODE> be set for scenes to render properly... the rest can be ignored for a first try. It is difficult to describe the meaning simply but it sets the distance in model units from a sample at which the error is guaranteed to hit 100% (radiosity_error_bound &gt;=1): no samples are reused at a distance larger than this from their original calculation point.</P>
<P>Imagine an apple at the left edge of a table. The goal is to make sure that samples on the surface of the table at the right are not used too close to the apple and definitely not underneath the apple.  If you had enough rays there wouldn't be a problem since one of them would be guaranteed to hit the apple and set the reuse radius properly for you. In practice, you must limit this.</P>
<P>We use this technique: find the object in your scene which might have the following problem: a small object on a larger flatter surface that you want good ambient light near. Now, how far from this would you have to get to be sure that one of your rays had a good chance of hitting it? In the apple-on-the-table example, assuming I used one POV-Ray unit as one inch, I might use 30 inches. A theoretically sound way (when you are running lots of rays) is the distance at which this object's top is 5 degrees above the horizon of the sample point you are considering. This corresponds to about 11 times the height of the object. So, for a 3-inch apple, 33 inches makes some sense. For good behavior under and around a 1/3 inch pea, use 3 inches etc. Another VERY rough estimate is one third the distance from your eye position to the point you are looking at. The reasoning is that you are probably no more than 90 inches from the apple on the table, if you care about the shading underneath it.  The default value is 0.</P>
<H5><A NAME="_Toc414199238"><A NAME="_Toc429993755">error_bound</A></A></H5>
<P>The <b><code>error_bound</code></b> float value is one of the two main speed/quality tuning values (the other is of course the number of rays shot). In an ideal world, this would be the <CODE>only</CODE> value needed. It is intended to mean the fraction of error tolerated. For example, if it were set to 1 the algorithm would not calculate a new value until the error on the last one was estimated at as high as 100%. Ignoring the error introduced by rotation for the moment, on flat surfaces this is equal to the fraction of the reuse distance, which in turn is the distance to the closest item hit. If you have an old sample on the floor 10 inches from a wall, an error bound of 0.5 will get you a new sample at a distance of about 5 inches from the wall. 0.5 is a little rough and ready, 0.33 is good for final renderings. Values much lower than 0.3 take <I>forever</I>. The default value is 0.4.</P>
<H5><A NAME="_Toc414199239"><A NAME="_Toc429993756">gray_threshold</A></A></H5>
<P>Diffusely interreflected light is a function of the objects around the point in question. Since this is recursively defined to millions of levels of recursion, in any real life scene, every point is illuminated at least in part by every other part of the scene. Since we can't afford to compute this, we only do one bounce and the calculated ambient light is very strongly affected by the colors of the objects near it. This is known as color bleed and it really happens but not as much as this calculation method would have you believe. The <b><code>gray_threshold</code></b> float value grays it down a little, to make your scene more believable. A value of .6 means to calculate the ambient value as 60% of the equivalent gray value calculated, plus 40% of the actual value calculated. At 0%, this feature does nothing. At 100%, you always get white/gray ambient light, with no hue. Note that this does not change the lightness/darkness, only the strength of hue/grayness (in HLS terms, it changes S only).  The default value is 0.5</P>
<H5><A NAME="_Toc414199240"><A NAME="_Toc429993757">low_error_factor</A></A></H5>
<P>If you calculate just enough samples, but no more, you will get an image which has slightly blotchy lighting. What you want is just a few extra interspersed, so that the blending will be nice and smooth.  The solution to this is the mosaic preview: it goes over the image one or more times beforehand, calculating radiosity values. To ensure that you get a few extra, the radiosity algorithm lowers the error bound during the pre-final passes, then sets it back just before the final pass. The <b><code>low_error_factor</code></b> is a float tuning value which sets the amount that the error bound is dropped during the preliminary image passes. If your low error factor is 0.8 and your error bound is set to 0.4 it will really use an error bound of 0.32 during the first passes and 0.4 on the final pass.  The default value is 0.8.</P>
<H5><A NAME="_Toc414199241"><A NAME="_Toc429993758">minimum_reuse</A></A></H5>
<P>The minimum effective radius ratio is set by <b><code>minimum_reuse</code></b> float value. This is the fraction of the screen width which sets the minimum radius of reuse for each sample point (actually, it is the fraction of the distance from the eye but the two are roughly equal). For example, if the value is 0.02 the radius of maximum reuse for every sample is set to whatever ground distance corresponds to 2% of the width of the screen. Imagine you sent a ray off to the horizon and it hits the ground at a distance of 100 miles from your eye point. The reuse distance for that sample will be set to 2 miles. At a resolution of 300*400 this will correspond to (very roughly) 8 pixels. The theory is that you don't want to calculate values for every pixel into every crevice everywhere in the scene, it will take too long. This sets a minimum bound for the reuse. If this value is too low, (which it should be in theory) rendering gets slow, and inside corners can get a little grainy. If it is set too high, you don't get the natural darkening of illumination near inside edges, since it reuses. At values higher than 2% you start getting more just plain errors, like reusing the illumination of the open table underneath the apple.  Remember that this is a unitless ratio. The default value is 0.015.</P>
<H5><A NAME="_Toc414199242"><A NAME="_Toc429993759">nearest_count</A></A></H5>
<P>The <b><code>nearest_count</code></b> integer value is the maximum number of old ambient values blended together to create a new interpolated value. It will always be the n geometrically closest reusable points that get used. If you go lower than 4, things can get pretty patchy. This can be good for debugging, though. Must be no more than 10, since that is the size of the array allocated.  The default value is 6.</P>
<H5><A NAME="_Toc414199244"><A NAME="_Toc429993760">recursion_limit</A></A></H5>
<P>The <b><code>recursion_limit</code></b> is an integer value which determines how many recursion levels are used to calculate the diffuse inter-reflection. Valid values are one and two. The default value is 1.</P>

<BR>
<HR>
<P ALIGN="CENTER">
Previous:<A HREF="pov386.htm">How Radiosity Works</A>&nbsp;&nbsp;
<A HREF="povuser.htm">Main Index</A>&nbsp;&nbsp;
Next:<A HREF="pov388.htm">Tips on Radiosity</A>
</P>
</BODY>
</HTML>
