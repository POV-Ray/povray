<HTML>
<HEAD>
<TITLE>POV-Ray 3.1 Documentation - Image Maps</TITLE>
</HEAD>
<BODY BGCOLOR="#FFCC66" TEXT="#000000" LINK="#0000FF" VLINK="#000080" ALINK="#FF0000">
<P ALIGN="CENTER">
Previous:<A HREF="pov297.htm">Pigment Maps and Pigment Lists</A>&nbsp;&nbsp;
<A HREF="povuser.htm">Main Index</A>&nbsp;&nbsp;
Next:<A HREF="pov299.htm">Quick Color</A>
</P>
<HR>
<BR>
<H4><A NAME="_Toc414199131"><A NAME="_Toc429993643">Image Maps</A></A></H4>
<P>When all else fails and none of the above pigment pattern types meets your needs you can use an <b><code>image_map</code></b> to wrap a 2-D bit-mapped image around your 3-D objects.</P>
<H5><A NAME="_Toc414199132"><A NAME="_Toc429993644">Specifying an Image Map</A></A></H5>
<P>The syntax for an <b><code>image_map</code></b> is:</P>
<I><DL>
<DT>IMAGE_MAP:</DT>
</I><b><code><DD>pigment{</DD>
<DD>image_map{</code></b> <I>BITMAP_TYPE "bitmap.ext" [IMAGE_MAP_MODS...]</I> <b><code>}</DD>
</code></b><I><DD>[PIGMENT_MODFIERS...]</DD>
</I><b><code><DD>}</DD>
</code></b><I><DT>BITMAP_TYPE:</DT>
</I><b><code><DD>gif</code></b>   |   <b><code>tga</code></b>   |   <b><code>iff</code></b>   |   <b><code>ppm</code></b>   |   <b><code>pgm</code></b>   |   <b><code>png</code></b>   |   <b><code>sys</DD>
</code></b><I><DT>IMAGE_MAP_MOD:</DT>
</I><b><code><DD>map_type</code></b>  <I>Type</I>   |   <b><code>once</code></b>   |   <b><code>interpolate</code></b>  <I>Type</I>   |</DD>
<b><code><DD>filter</code></b> <I>Palette</I><b><code>,</code></b> <I>Amount</I>   |   <b><code>filter all</code></b> <I>Amount</I>   |</DD>
<b><code><DD>transmit</code></b> <I>Palette</I><b><code>,</code></b> <I>Amount</I>   |   <b><code>transmit all</code></b> <I>Amount</DD>
</DL>
</I><P>After the required <I>BITMAP_TYPE</I> keyword is a string expression containing the name of a bitmapped image file of the specified type.  Several optional modifiers may follow the file specification. The modifiers are described below. Note that earlier versions of POV-Ray allowed some modifiers before the <I>BITMAP_TYPE</I> but that syntax is being phased out in favor of the syntax described here.  Note <b><code>sys</code></b> format is a system-specific format such as BMP for Windows or Pict for Macintosh.</P>
<P>Filenames specified in the <b><code>image_map</code></b> statements will be searched for in the home (current) directory first and, if not found, will then be searched for in directories specified by any <b><code>+L</code></b> or <b><code>Library_Path</code></b> options active. This would facilitate keeping all your image maps files in a separate subdirectory and giving a <b><code>Library_Path</code></b> option to specify where your library of image maps are.  See "<A HREF="pov139.htm#_Ref413142060">Library Paths</A>" for details. </P>
<P>By default, the image is mapped onto the x-y-plane. The image is <I>projected </I>onto the object as though there were a slide projector somewhere in the -z-direction. The image exactly fills the square area from (x,y) coordinates (0,0) to (1,1) regardless of the image's original size in pixels. If you would like to change this default you may translate, rotate or scale the pigment or texture to map it onto the object's surface as desired.</P>
<P>In the section "<A HREF="pov323.htm#_Ref417376730">Checker</A>", the <b><code>checker</code></b> pigment pattern is explained. The checks are described as solid cubes of colored clay from which objects are carved. With image maps you should imagine that each pixel is a long, thin, square, colored rod that extends parallel to the z-axis. The image is made from rows and columns of these rods bundled together and the object is then carved from the bundle.</P>
<P>If you would like to change this default orientation you may translate, rotate or scale the pigment or texture to map it onto the object's surface as desired.</P>
<P>The file name is optionally followed by one or more <I>BITMAP_MODIFIERS</I>.  The <b><code>filter</code></b>, <b><code>filter all</code></b>, <b><code>transmit</code></b>, and <b><code>transmit all</code></b> modifiers are specific to image maps and are discussed in the following sections.  An <b><code>image_map</code></b> may also use generic bitmap modifiers <b><code>map_type</code></b>, <b><code>once</code></b> and <b><code>interpolate</code></b> described in "<A HREF="pov355.htm#_Ref417983218">Bitmap Modifiers</A>"</P>
<H5><A NAME="_Toc414199134"><A NAME="_Toc429993645">The Filter and Transmit Bitmap Modifiers</A></A></H5>
<P>To make all or part of an image map transparent you can specify <b><code>filter</code></b> and/or <b><code>transmit</code></b> values for the color palette/registers of PNG, GIF or IFF pictures (at least for the modes that use palettes). You can do this by adding the keyword <b><code>filter</code></b> or <b><code>transmit</code></b> following the filename. The keyword is followed by two numbers. The first number is the palette number value and the second is the amount of transparency. The values should be separated by a comma. For example:</P>
<PRE>  image_map {
    gif "mypic.gif"
    filter   0, 0.5 // Make color 0 50% filtered transparent
    filter   5, 1.0 // Make color 5 100% filtered transparent
    transmit 8, 0.3 // Make color 8 30% non-filtered transparent
  }</PRE>
<P>You can give the entire image a <b><code>filter</code></b> or <b><code>transmit</code></b> value using <b><code>filter all</code></b> <I>Amount</I> or <b><code>transmit all</code></b> <I>Amount</I>. For example:</P>
<PRE>  image_map {
    gif "stnglass.gif"
    filter all 0.9
  }</PRE>
<P>Note that early versions of POV-Ray used the keyword <b><code>alpha</code></b> to specify filtered transparency however that word is often used to describe non-filtered transparency. For this reason <b><code>alpha</code></b> is no longer used.</P>
<P>See section "<A HREF="pov174.htm#_Ref413394014">Specifying Colors</A>" for details on the differences between filtered and non-filtered transparency.</P>
<H5><A NAME="_Ref412464620"><A NAME="_Toc414199135"><A NAME="_Toc429993646">Using the Alpha Channel</A></A></A></H5>
<P>Another way to specify non-filtered transmit transparency in an image map is by using the<I> alpha channel</I>.  PNG file format allows you to store a different transparency for each color index in the PNG file, if desired. If your paint programs support this feature of PNG you can do the transparency editing within your paint program rather than specifying transmit values for each color in the POV file. Since PNG and TGA image formats can also store full alpha channel (transparency) information you can generate image maps that have transparency which isn't dependent on the color of a pixel but rather its location in the image.</P>
<P>Although POV uses <b><code>transmit 0.0</code></b> to specify no transparency and <b><code>1.0</code></b> to specify full transparency, the alpha data ranges from 0 to 255 in the opposite direction. Alpha data 0 means the same as <b><code>transmit 1.0</code></b> and alpha data 255 produces <b><code>transmit 0.0</code></b>.</P>

<BR>
<HR>
<P ALIGN="CENTER">
Previous:<A HREF="pov297.htm">Pigment Maps and Pigment Lists</A>&nbsp;&nbsp;
<A HREF="povuser.htm">Main Index</A>&nbsp;&nbsp;
Next:<A HREF="pov299.htm">Quick Color</A>
</P>
</BODY>
</HTML>
