# Mesa 3-D graphics library
# Version:  4.0
# 
# Copyright (C) 1999  Brian Paul   All Rights Reserved.
# 
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# DOS/DJGPP glut makefile v1.1 for Mesa 4.0
#
#  Copyright (C) 2002 - Borca Daniel
#  Email : dborca@yahoo.com
#  Web   : http://www.geocities.com/dborca


#
#  Available options:
#
#    Environment variables:
#	CFLAGS
#
#	GLIDE		absolute path to Glide SDK; used with FX.
#			default = $(TOP)/include/glide3
#	FX=1		build for 3dfx Glide3; use it if you have the glide
#			SDK (designed for your platform), and, of course, a
#			3dfx card... Note that this disables compilation of
#			actual DMesa code, as Glide does all the stuff!
#			default = no
#	MARK		absolute path to original GLUT.
#			default = $(TOP)/src-glut
#
#    Targets:
#	all:		build GLUT
#	clean:		remove object files
#



.PHONY: all clean

TOP = ..
GLIDE ?= $(TOP)/include/glide3
MARK ?= $(TOP)/src-glut
LIBDIR = $(TOP)/lib
GLUT_LIB = libglut.a
GLUT_DXE = glut.dxe
GLUT_IMP = libiglut.a

CC = gcc
CFLAGS += -I$(TOP)/include -I$(MARK)
ifdef FX
CFLAGS += -D__DOS__ -I$(GLIDE) -DFX -DFX_GLIDE3 -DFXMESA_USE_ARGB
endif

AR = ar
ARFLAGS = ru

ifneq ($(wildcard $(DJDIR)/lib/dxe2.ld),)
DXE2GEN = $(wildcard $(addsuffix /dxe2gen.exe,$(subst ;, ,$(PATH))))
endif

RM = del

CORE_SOURCES = \
	bitmap.c \
	callback.c \
	color.c \
	globals.c \
	init.c \
	menu.c \
	models.c \
	overlay.c \
	state.c \
	teapot.c \
	window.c

PC_HW_SOURCES = \
	PC_HW/pc_hw.c \
	PC_HW/pc_keyb.c \
	PC_HW/pc_mouse.c \
	PC_HW/pc_timer.c \
	PC_HW/pc_irq.S

MARK_SOURCES = \
	$(MARK)/glut_8x13.c \
	$(MARK)/glut_9x15.c \
	$(MARK)/glut_hel10.c \
	$(MARK)/glut_hel12.c \
	$(MARK)/glut_hel18.c \
	$(MARK)/glut_tr10.c \
	$(MARK)/glut_tr24.c

SOURCES = $(CORE_SOURCES) $(PC_HW_SOURCES) $(MARK_SOURCES)

OBJECTS = $(addsuffix .o,$(basename $(SOURCES)))

.c.o:
	$(CC) -o $@ -c $(CFLAGS) $<
.S.o:
	$(CC) -o $@ -c $(CFLAGS) $<
.s.o:
	$(CC) -o $@ -c $(CFLAGS) -x assembler-with-cpp $<

all: $(LIBDIR)/$(GLUT_LIB) $(LIBDIR)/$(GLUT_DXE) $(LIBDIR)/$(GLUT_IMP)

$(LIBDIR)/$(GLUT_LIB): $(OBJECTS)
	$(AR) $(ARFLAGS) $(LIBDIR)/$(GLUT_LIB) $(OBJECTS)

$(LIBDIR)/$(GLUT_DXE) $(LIBDIR)/$(GLUT_IMP): $(OBJECTS)
ifeq ($(DXE2GEN),)
	$(warning Missing DXE2GEN and/or DXE2.LD! You must have DXE2GEN)
	$(warning somewhere in PATH, and DXE2.LD in DJGPP/LIB directory.)
else
	-dxe2gen -o $(LIBDIR)/$(GLUT_DXE) -I $(LIBDIR)/$(GLUT_IMP) $(OBJECTS) -E djgpp_ -E glut -D "Mesa DJGPP GLUT" -U
endif

clean:
	-$(RM) $(subst /,\,*.o)
	-$(RM) $(subst /,\,PC_HW/*.o)
	-$(RM) $(subst /,\,$(MARK)/*.o)

-include depend
