name: 'Quick Tests'

on:
  workflow_dispatch:
  push:
    # For now, there's nothing in the following directories that we're actually checking.
    paths-ignore: [ 'distribution/**', 'doc/**', 'source-doc/**' ]
  pull_request:
    # For now, there's nothing in the following directories that we're actually checking.
    paths-ignore: [ 'distribution/**', 'doc/**', 'source-doc/**' ]

jobs:
  build_unix:
    name: '${{ matrix.os-name }} Build Test'

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os-name: 'Linux'
          os: ubuntu-latest
          c-compiler: gcc
          cxx-compiler: g++
          configure-options: ''
        - os-name: 'MacOS'
          os: macos-latest
          c-compiler: clang
          cxx-compiler: clang++
          configure-options: 'CXXFLAGS="-std=c++11"' # OpenEXR 3 needs C++11

    steps:

    - name: 'Matrix Diagnostics'
      shell: bash
      run: |
        echo '${{ toJSON(matrix) }}'
        ${{matrix.c-compiler}} --version

    - name: 'Check out Repository'
      uses: actions/checkout@v2

    - name: 'Install Prerequisites'
      uses: POV-Ray/povray/.github/actions/unix_getlibs@gh-actions-v1

    - name: 'Prebuild'
      uses: POV-Ray/povray/.github/actions/unix_prebuild@gh-actions-v1
    - name: 'Sanity-Check Working Tree'
      uses: POV-Ray/povray/.github/actions/git_check_repo@gh-actions-v1

    - name: 'Configure'
      uses: POV-Ray/povray/.github/actions/unix_configure@gh-actions-v1
      with:
        c-compiler: ${{ matrix.c-compiler }}
        cxx-compiler: ${{ matrix.cxx-compiler }}
        configure-options: ${{ matrix.configure-options }}
    - name: 'Sanity-Check Working Tree'
      uses: POV-Ray/povray/.github/actions/git_check_repo@gh-actions-v1

    - name: 'Bundle Artifacts for Diagnostics'
      if: ${{ always() }}
      uses: POV-Ray/povray/.github/actions/git_bundle_ignored@gh-actions-v1
      with:
        name: artifact_diag_${{ matrix.os }}.tar.gz

    - name: 'Build'
      uses: POV-Ray/povray/.github/actions/unix_make@gh-actions-v1
    - name: 'Sanity-Check Working Tree'
      uses: POV-Ray/povray/.github/actions/git_check_repo@gh-actions-v1

    - name: 'Check Functionality'
      uses: POV-Ray/povray/.github/actions/unix_make@gh-actions-v1
      with:
        make-target: check
    - name: 'Sanity-Check Working Tree'
      uses: POV-Ray/povray/.github/actions/git_check_repo@gh-actions-v1

#    - name: 'Install'
#      uses: POV-Ray/povray/.github/actions/unix_make@gh-actions-v1
#      with:
#        make-target: install
#    - name: 'Sanity-Check Working Tree'
#      uses: POV-Ray/povray/.github/actions/git_check_repo@gh-actions-v1

    - name: 'Upload Artifacts for Diagnostics'
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifact_diag_${{ matrix.os }}
        path: artifact_diag_${{ matrix.os }}.tar.gz

    # TODO: Maybe do some basic installation checking.

  build_windows:
    name: 'Windows Build Test'
    runs-on: windows-latest
    steps:

    - name: 'Check out Repository'
      uses: actions/checkout@v2

    - name: 'Add MSBuild to PATH'
      uses: microsoft/setup-msbuild@v1.0.2

    - name: 'Patch povray.h'
      shell: pwsh
      run: |
        (Get-Content source\backend\povray.h).replace('FILL IN NAME HERE.........................', 'GitHub') | Set-Content source\backend\povray.h
        (Get-Content source\backend\povray.h).replace('#error Please complete the following DISTRIBUTION_MESSAGE_2 definition', '') | Set-Content source\backend\povray.h

    - name: 'Build'
      uses: POV-Ray/povray/.github/actions/windows_build@gh-actions-v1
      with:
        pov-ray-build-id: gh${{github.run_number}}
        solution: vs10
        configuration: Release
        platform: x64
        toolset: v142
        msbuild-options: ''
    - name: 'Unpatch povray.h'
      shell: bash
      run: git checkout source/backend/povray.h
    - name: 'Sanity-Check Working Tree'
      uses: POV-Ray/povray/.github/actions/git_check_repo@gh-actions-v1
